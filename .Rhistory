length(LLP_Results)
burst_data <- read.csv("https://raw.githubusercontent.com/jlw-ecoevo/jlw-ecoevo.github.io/refs/heads/master/biometry/Lab3_burst_data.csv")
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index],     lambda_value))
}
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
}
}
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index],     lambda_value))
}
}
}
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index],     lambda_value))
}
}
print(LLP_Results)
print(Log_Prob_Density)
}
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
plot(x=1:50, y=Log_Prob_Density, type = "l", col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
plot(log_likelihood_poisson(burst_data$NumPhage[1:5], 50), col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
#| label: load-packagesa
#| include: true
library(palmerpenguins)
#I also want us just to focus on two species, Adelie and Gentoo, so we are going to cut the Chinstrap data out of the dataset for this lab.
#Let's also toss out rows with NA values for body mass
penguins <- penguins[penguins$species!="Chinstrap" & !is.na(penguins$body_mass_g),]
True_XVar <- function(Xset){
Xrunning_sum <- 0
Xmean <- mean(Xset)
for (i in 1:length(Xset)) {
Xrunning_sum <- Xrunning_sum + ((Xset[i] - Xmean)^2)
}
Xvar_result <- Xrunning_sum/length(Xset)
print(Xvar_result)
}
True_XVar(c(1,2,3))
##: initializing the mean value of true var (W2), the mean value of sample var and distribution for the simulation.
True_Xvar_results <- c()
True_Xvar_means <- c()
Sample_Xvar_results <- c()
Sample_Xvar_means <- c()
##: Calculate the mean value of true var of random variable X 100 times and plot the distribution of means
for(i in 1:100){
for(j in 1:1000){
True_Xvar_results[j] <- True_XVar(rnorm(i))
}
True_Xvar_means[i] <- mean(True_Xvar_results)
}
burst_data <- read.csv("https://raw.githubusercontent.com/jlw-ecoevo/jlw-ecoevo.github.io/refs/heads/master/biometry/Lab3_burst_data.csv")
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index],     lambda_value))
}
}
##print(LLP_Results)
##print(Log_Prob_Density)
}
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
plot(log_likelihood_poisson(burst_data$NumPhage[1:5], 50), col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
}
##print(LLP_Results)
##print(Log_Prob_Density)
}
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
plot(log_likelihood_poisson(burst_data$NumPhage[1:5], 50), col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
}
##print(LLP_Results)
##print(Log_Prob_Density)
}
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
}
##print(LLP_Results)
##print(Log_Prob_Density)
}
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
}
##print(LLP_Results)
##print(Log_Prob_Density)
}
LLP_Results <- numeric(length = 0)
Log_Prob_Density <- numeric(length = 0)
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
}
##print(LLP_Results)
##print(Log_Prob_Density)
}
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
plot(log_likelihood_poisson(burst_data$NumPhage[1:5], 50), col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
print(Log_Prob_Density)
LLP_Results <- numeric(length = 0)
Log_Prob_Density <- numeric(length = 0)
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
}
print(LLP_Results)
print(Log_Prob_Density)
}
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
plot(log_likelihood_poisson(burst_data$NumPhage[1:5], 50), col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
plot(x=1:50, y=LLP_Results, col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
plot(x=c(1,50), y=LLP_Results, col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
length(LLP_Results)
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
}
print(LLP_Results)
print(Log_Prob_Density)
}
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
plot(x=c(1,50), y=LLP_Results, col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
}
print("LLP_RESULTS:" LLP_Results)
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
}
print(LLP_Results)
}
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
}
print(LLP_Results)
print(Log_Prob_Density)
}
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
}
print(LLP_Results)
print(Log_Prob_Density)
}
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
plot(x=c(1,50), y=LLP_Results, col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
plot(density(penguins$body_mass_g,
na.rm = T),
xlab = "Penguin Body Mass (g)",
main = "")
#| eval: false
likelihoodSingleObservation <- function(parameters,yi){
#calculate your likelihood
return(your_likelihood)
}
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
}
print(LLP_Results)
print(Log_Prob_Density)
}
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
burst_data <- read.csv("https://raw.githubusercontent.com/jlw-ecoevo/jlw-ecoevo.github.io/refs/heads/master/biometry/Lab3_burst_data.csv")
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
}
return(LLP_Results)
return(Log_Prob_Density)
}
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
LLP_Results <- c()
Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
for(lambda_value in 1:max_rate){
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
}
return(LLP_Results)
#return(Log_Prob_Density)
}
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
length(LLP_Results)
#LLP_Results <- c()
#Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
LLP_Results <- c()
Log_Prob_Density <- c()
for(lambda_value in 1:max_rate){
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
}
return(LLP_Results)
#return(Log_Prob_Density)
}
log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
length(LLP_Results)
b <- log_likelihood_poisson(burst_data$NumPhage[1:5],50)
b
#LLP_Results <- c()
#Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
LLP_Results <- c()
Log_Prob_Density <- c()
for(lambda_value in 1:max_rate){
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
}
return(LLP_Results)
#return(Log_Prob_Density)
}
LLP <- log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
plot(x=c(1,50), y=LLP, col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
LLP <- log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
plot(x=c(1:50), y=LLP, col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
which.max(LLP)
LLP <- log_likelihood_poisson(burst_data$NumPhage[1:5], 100)
plot(x=c(1:100), y=LLP, col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
which.max(LLP)
##: Part B
LLPFull <- log_likelihood_poisson(burst_data$NumPhage, 100)
plot(x=c(1:100), y=LLP, col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
##: Part C
which.max(LLPFull)
LLPFull <- log_likelihood_poisson(burst_data$NumPhage, 100)
plot(x=c(1:100), y=LLP, col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
?plot()
?hist()
hist(burst_data$NumPhage, freq = FALSE)
hist(burst_data$NumPhage, freq = FALSE)
points(dpois(burst_data$NumPhage, 34), type = "l")
hist(burst_data$NumPhage, freq = FALSE)
points(dpois(burst_data$NumPhage, 34), type = "l")
hist(burst_data$NumPhage, freq = FALSE, ylim = "l")
burst_data <- read.csv("https://raw.githubusercontent.com/jlw-ecoevo/jlw-ecoevo.github.io/refs/heads/master/biometry/Lab3_burst_data.csv")
#LLP_Results <- c()
#Log_Prob_Density <- c()
log_likelihood_poisson <- function(Pset, max_rate){
LLP_Results <- c()
Log_Prob_Density <- c()
for(lambda_value in 1:max_rate){
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
}
return(LLP_Results)
#return(Log_Prob_Density)
}
LLP <- log_likelihood_poisson(burst_data$NumPhage[1:5], 100)
plot(x=c(1:100), y=LLP, col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
##: Part B
LLPFull <- log_likelihood_poisson(burst_data$NumPhage, 100)
plot(x=c(1:100), y=LLP, col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
##: Part C
which.max(LLPFull)
LLP <- log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
plot(x=c(1:50), y=LLP, col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
##: Part B
LLPFull <- log_likelihood_poisson(burst_data$NumPhage, 50)
plot(x=c(1:50), y=LLP, col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
##: Part C
which.max(LLPFull)
hist(burst_data$NumPhage, freq = FALSE, ylim = "l")
hist(burst_data$NumPhage, freq = FALSE)
points(dpois(burst_data$NumPhage, 34), type = "l", ylim = "l")
hist(burst_data$NumPhage, freq = FALSE)
points(dpois(burst_data$NumPhage, 34), type = "l", ylim = c(0,0.075))
hist(burst_data$NumPhage, freq = FALSE, ylim = c(0,0.075))
points(dpois(burst_data$NumPhage, 34), type = "l")
plot(density(penguins$body_mass_g,
na.rm = T),
xlab = "Penguin Body Mass (g)",
main = "")
#| label: load-packagesa
#| include: true
library(palmerpenguins)
#I also want us just to focus on two species, Adelie and Gentoo, so we are going to cut the Chinstrap data out of the dataset for this lab.
#Let's also toss out rows with NA values for body mass
penguins <- penguins[penguins$species!="Chinstrap" & !is.na(penguins$body_mass_g),]
plot(density(penguins$body_mass_g,
na.rm = T),
xlab = "Penguin Body Mass (g)",
main = "")
?dnorm()
params <- c(mu1, mu2, sd1, sd2, p)
params <- c(mu1 = numeric(), mu2 = numeric(), sd1 = numeric(), sd2 = numeric(), p = numeric())
likelihoodSingleObservation <- function(params,yi){
yi_likelihood = ((p * dnorm(yi, mean = mu1, sd = sd1)) + ((1 - p) * dnorm(yi, mean = mu2, sd = sd2)))
return(yi_likelihood)
}
params <- c()
likelihoodSingleObservation <- function(params,yi){
yi_likelihood = ((p * dnorm(yi, params[1], params[4])) + ((1 - params[5]) * dnorm(yi, params[2], params[3])))
return(yi_likelihood)
}
params <- c()
likelihoodSingleObservation <- function(params,yi){
yi_likelihood = ((p * dnorm(yi, params[1], params[4])) + ((1 - params[5]) * dnorm(yi, params[2], params[3])))
return(yi_likelihood)
}
params <- c()
likelihoodSingleObservation <- function(params,yi){
yi_likelihood = ((p * dnorm(yi, params[1], params[4])) + ((1 - params[5]) * dnorm(yi, params[2], params[3])))
return(yi_likelihood)
}
y <- c()
likelihoodAllObservations <- function(params,y){
if(params["p"] < 0 |
params["p"] > 1 |
params["sd1"] < 0 |
params["sd2"] < 0){
return(-Inf)
} else {
y_likelihood = likelihoodSingleObservation(params, y)
return(y_likelihood)
}
}
y <- c()
likelihoodAllObservations <- function(params,y){
if(params["p"] < 0 |
params["p"] > 1 |
params["sd1"] < 0 |
params["sd2"] < 0){
return(-Inf)
} else {
y_log_likelihood = sum(log(likelihoodSingleObservation(params, y)))
return(y_likelihood)
}
}
parameterInitialVals = c(mu1 = 3500, sd1 = 450, mu2 = 5000, sd2 = 450, p = 0.5)
maximum = optim(par = parameterInitialVals, fn = likelihoodAllObservations, y = penguins$body_mass_g,
control = list(fnscale = -1))
params <- c(mu1, mu2, sd1, sd2, p)
params <- c("mu1", "mu2", "sd1", "sd2", "p")
likelihoodSingleObservation <- function(params,yi){
yi_likelihood = ((p * dnorm(yi, params["mu1"], params["sd1"])) + ((1 - params["p"]) * dnorm(yi, params["mu2"], params["sd2"])))
return(yi_likelihood)
}
parameterInitialVals = c(mu1 = 3500, sd1 = 450, mu2 = 5000, sd2 = 450, p = 0.5)
maximum = optim(par = parameterInitialVals, fn = likelihoodAllObservations, y = penguins$body_mass_g,
control = list(fnscale = -1))
params <- c("mu1", "mu2", "sd1", "sd2", "p")
likelihoodSingleObservation <- function(params,yi){
yi_likelihood = (("p" * dnorm(yi, params["mu1"], params["sd1"])) + ((1 - params["p"]) * dnorm(yi, params["mu2"], params["sd2"])))
return(yi_likelihood)
}
likelihoodAllObservations <- function(params,y){
if(params["p"] < 0 |
params["p"] > 1 |
params["sd1"] < 0 |
params["sd2"] < 0){
return(-Inf)
} else {
y_log_likelihood = sum(log(likelihoodSingleObservation(params, y)))
return(y_likelihood)
}
}
{r}
parameterInitialVals = c(mu1 = 3500, sd1 = 450, mu2 = 5000, sd2 = 450, p = 0.5)
maximum = optim(par = parameterInitialVals, fn = likelihoodAllObservations, y = penguins$body_mass_g,
control = list(fnscale = -1))
params <- c("mu1", "mu2", "sd1", "sd2", "p")
likelihoodSingleObservation <- function(params,yi){
yi_likelihood = ((params["p"] * dnorm(yi, params["mu1"], params["sd1"])) + ((1 - params["p"]) * dnorm(yi, params["mu2"], params["sd2"])))
return(yi_likelihood)
}
parameterInitialVals = c(mu1 = 3500, sd1 = 450, mu2 = 5000, sd2 = 450, p = 0.5)
maximum = optim(par = parameterInitialVals, fn = likelihoodAllObservations, y = penguins$body_mass_g,
control = list(fnscale = -1))
likelihoodAllObservations <- function(params,y){
if(params["p"] < 0 |
params["p"] > 1 |
params["sd1"] < 0 |
params["sd2"] < 0){
return(-Inf)
} else {
y_log_likelihood = sum(log(likelihoodSingleObservation(params, y)))
return(y_log_likelihood)
}
}
parameterInitialVals = c(mu1 = 3500, sd1 = 450, mu2 = 5000, sd2 = 450, p = 0.5)
maximum = optim(par = parameterInitialVals, fn = likelihoodAllObservations, y = penguins$body_mass_g,
control = list(fnscale = -1))
MLE = maximum$par
print(paste0("My Maximum Likelihood Estimate for ",names(MLE),": ", MLE))
hist(penguins$body_mass_g, freqq = FALSE, breaks = 15, ylim = c(0,5e-4))
hist(penguins$body_mass_g, freq = FALSE, breaks = 15, ylim = c(0,5e-4))
hist(penguins$body_mass_g, freq = FALSE, breaks = 15, ylim = c(0,5e-4))
points(params["p"] * dnorm(yi, params["mu1"], params["sd1"]), type = "l", col = "goldenrod")
parameterInitialVals = c(mu1 = 3500, sd1 = 450, mu2 = 5000, sd2 = 450, p = 0.5)
maximum = optim(par = parameterInitialVals, fn = likelihoodAllObservations, y = penguins$body_mass_g,
control = list(fnscale = -1))
MLE = maximum$par
print(paste0("My Maximum Likelihood Estimate for ",names(MLE),": ", MLE))
hist(penguins$body_mass_g, freq = FALSE, breaks = 15, ylim = c(0,5e-4))
points(0.381251453066743 * dnorm(yi, 3515.6665385862, 342.703635105696), type = "l", col = "goldenrod")
hist(penguins$body_mass_g, freq = FALSE, breaks = 15, ylim = c(0,5e-4))
points(0.381251453066743 * dnorm(1000:7000, 3515.6665385862, 342.703635105696), type = "l", col = "goldenrod")
points((1 - 0.381251453066743) * dnorm(1000:7000, 4817.2426968284, 633.64435427738), type = "l", col = "cornflowerblue")
hist(penguins$body_mass_g, freq = FALSE, breaks = 15, ylim = c(0,5e-4))
points((0.381251453066743 * dnorm(1000:7000, 3515.6665385862, 342.703635105696)), type = "l", col = "goldenrod")
points(((1 - 0.381251453066743) * dnorm(1000:7000, 4817.2426968284, 633.64435427738)), type = "l", col = "cornflowerblue")
hist(penguins$body_mass_g, freq = FALSE, breaks = 15, ylim = c(0,5e-4), main = "Penguin Body Mass (g)")
points((0.381251453066743 * dnorm(1000:7000, 3515.6665385862, 342.703635105696)), type = "l", col = "goldenrod")
points(((1 - 0.381251453066743) * dnorm(1000:7000, 4817.2426968284, 633.64435427738)), type = "l", col = "cornflowerblue")
hist(penguins$body_mass_g, freq = FALSE, breaks = 15, ylim = c(0,5e-4), main = "Penguin Body Mass (g)")
points(y = (0.381251453066743 * dnorm(3000:6500, 3515.6665385862, 342.703635105696)), x = 3000:6500, type = "l", col = "goldenrod")
points(y = ((1 - 0.381251453066743) * dnorm(3000:6500, 4817.2426968284, 633.64435427738)), x = 3000:6500, type = "l", col = "cornflowerblue")
hist(penguins$body_mass_g, freq = FALSE, breaks = 15, ylim = c(0,5e-4), main = "Penguin Body Mass (g)", xlab = "Penguin Body Mass (g)", ylab = "Probability Density")
points(y = (0.381251453066743 * dnorm(3000:6500, 3515.6665385862, 342.703635105696)), x = 3000:6500, type = "l", col = "goldenrod")
points(y = ((1 - 0.381251453066743) * dnorm(3000:6500, 4817.2426968284, 633.64435427738)), x = 3000:6500, type = "l", col = "cornflowerblue")
