points(qqline(log_pois_sample_means))
qqnorm(log_exp_sample_means, main = "Exponential Distribution Sample Means Q-Q Plot")
points(qqline(log_exp_sample_means))
exp_sample_means <- c()
## Plotting sample means from Exponential Distribution
exp_sample_size = 10000
for(i in 1:exp_sample_size){
exp_sample_means[i] <- mean(sample(exp_data, exp_sample_size))
}
log_exp_sample_means = log(exp_sample_means)
pois_sample_means <- c()
##Plotting sample means from Poisson Distribution
pois_sample_size = 10000
for(i in 1:pois_sample_size){
pois_sample_means[i] <- mean(sample(pois_data, pois_sample_size))
}
log_pois_sample_means = log(pois_sample_means)
par(mfrow=c(1,2))
qqnorm(log_pois_sample_means, main = "Poisson Distribution Sample Means Q-Q Plot")
points(qqline(log_pois_sample_means))
qqnorm(log_exp_sample_means, main = "Exponential Distribution Sample Means Q-Q Plot")
points(qqline(log_exp_sample_means))
True_XVar <- function(Xset){
Xrunning_sum <- 0
Xmean <- mean(Xset)
for (i in 1:length(Xset)) {
Xrunning_sum <- Xrunning_sum + ((Xset[i] - Xmean)^2)
}
Xvar_result <- Xrunning_sum/length(Xset)
print(Xvar_result)
}
True_XVar <- function(Xset){
Xrunning_sum <- 0
Xmean <- mean(Xset)
for (i in 1:length(Xset)) {
Xrunning_sum <- Xrunning_sum + ((Xset[i] - Xmean)^2)
}
Xvar_result <- Xrunning_sum/length(Xset)
}
True_XVar <- function(Xset){
Xrunning_sum <- 0
Xmean <- mean(Xset)
for (i in 1:length(Xset)) {
Xrunning_sum <- Xrunning_sum + ((Xset[i] - Xmean)^2)
}
Xvar_result <- Xrunning_sum/length(Xset)
}
##: initializing the mean value of true var (W2), the mean value of sample var and distribution for the simulation.
True_Xvar_results <- c()
True_Xvar_means <- c()
Sample_Xvar_results <- c()
Sample_Xvar_means <- c()
##: Calculate the mean value of true var of random variable X 100 times and plot the distribution of means
for(i in 1:100){
for(j in 1:1000){
True_Xvar_results[j] <- True_XVar(rnorm(i))
}
True_Xvar_means[i] <- mean(True_Xvar_results)
}
##: Calculate the mean value of sample var of random variable X
for(i in 1:100){
for(j in 1:1000){
Sample_Xvar_results[j] <- var(rnorm(i))
}
Sample_Xvar_means[i] <- mean(Sample_Xvar_results)
}
##: Plot
par(mfrow = c(1,2))
plot(True_Xvar_means, type = "l", col = "green", x = 1:100, xlab = "n", ylab = "mean W^2", main = "Mean True Variance")
plot(Sample_Xvar_means, type = "l", col = "blue", x = 1:100, ylim = c(0.0,1.2), xlab = "n", ylab = "mean sample variance", main = "Mean Sample Variance")
##: create one plot showing how the standard deviation of the sample mean (i.e. standard error) calculated from 1000 samples of size n changes with increasing sample size (vary n from 1 to 100), for data sampled from a standard normal distribution
Sample_Std_results <- c()
Sample_Std_means <- c()
Sample_Median_results <- c()
Sample_Std_medians <- c()
for(i in 1:100){
for(j in 1:1000){
Sample_Std_results[j] <- mean(rnorm(i))
}
Sample_Std_means[i] <- sd(Sample_Std_results)
}
for(i in 1:100){
for(j in 1:1000){
Sample_Std_results[j] <- median(rnorm(i))
}
Sample_Std_medians[i] <- sd(Sample_Std_results)
}
plot(Sample_Std_means, type = "l", col = "green", x = 1:100, xlab = "n", ylab = "Standard Deviaiton", main = "Standard Deviation of the Sample Mean and Median in a Normal Distribution")
points(Sample_Std_medians, type = "l", col = "blue", x = 1:100, xlab = "n", ylab = "std of the median", main = "Standard Deviation of the Sample Variance", lty=2)
legend(70,0.9, legend = c("Sample Mean", "Sample Median"), fill = c("green", "blue"))
log_likelihood_poisson <- function(Pset, max_rate){
LLP_Results <- c()
Log_Prob_Density <- c()
for(lambda_value in 1:max_rate){
for(observation_index in 1:length(Pset)){
Log_Prob_Density[observation_index] <- log(dpois(Pset[observation_index], lambda_value))
}
LLP_Results[lambda_value] <- sum(Log_Prob_Density)
}
return(LLP_Results)
}
LLP <- log_likelihood_poisson(burst_data$NumPhage[1:5], 50)
plot(x=c(1:50), y=LLP, col = "magenta", main = "Log Likelihood of a Poisson Distribution with Increasing Lambda", xlab = "lambda", ylab = "log likelihood")
?sort()
hist(burst_data$NumPhage, freq = FALSE, main = "Original Bacteriophage Data and Poisson PDF", ylab = "Probability Density", xlab = "NumPhage" , ylim = c(0,0.1), col = "cornflowerblue")
sorted_burst_data <- sort(burst_data$NumPhage, decreasing = FALSE)
points(dpois(sorted_burst_data, 34), type = "l", col = "darkorchid")
legend(65,0.1, legend = c("Original Data", "PDF of Poisson Dist."), fill = c("cornflowerblue", "darkorchid"))
hist(burst_data$NumPhage, freq = FALSE, main = "Original Bacteriophage Data and Poisson PDF", ylab = "Probability Density", xlab = "NumPhage" , ylim = c(0,0.1), col = "cornflowerblue")
sorted_burst_data <- sort(burst_data$NumPhage, decreasing = FALSE)
points(dpois(sorted_burst_data), type = "l", col = "darkorchid")
hist(burst_data$NumPhage, freq = FALSE, main = "Original Bacteriophage Data and Poisson PDF", ylab = "Probability Density", xlab = "NumPhage" , ylim = c(0,0.1), col = "cornflowerblue")
sorted_burst_data <- sort(burst_data$NumPhage, decreasing = FALSE)
points(dpois(sorted_burst_data, 34), type = "l", col = "darkorchid")
legend(65,0.1, legend = c("Original Data", "PDF of Poisson Dist."), fill = c("cornflowerblue", "darkorchid"))
hist(burst_data$NumPhage, freq = FALSE, main = "Original Bacteriophage Data and Poisson PDF", ylab = "Probability Density", xlab = "NumPhage" , ylim = c(0,0.1), col = "cornflowerblue")
sorted_burst_data <- sort(burst_data$NumPhage, decreasing = FALSE)
points(dpois(sorted_burst_data, 34), col = "darkorchid")
legend(65,0.1, legend = c("Original Data", "PDF of Poisson Dist."), fill = c("cornflowerblue", "darkorchid"))
hist(burst_data$NumPhage, freq = FALSE, main = "Original Bacteriophage Data and Poisson PDF", ylab = "Probability Density", xlab = "NumPhage" , ylim = c(0,0.1), col = "cornflowerblue")
sorted_burst_data <- sort(burst_data$NumPhage, decreasing = FALSE)
points(dpois(sorted_burst_data, 34), type = "l", col = "darkorchid")
legend(65,0.1, legend = c("Original Data", "PDF of Poisson Dist."), fill = c("cornflowerblue", "darkorchid"))
#| label: load-packagesa
#| include: true
library(palmerpenguins)
penguins <- penguins[penguins$species!="Chinstrap"
& !is.na(penguins$body_mass_g),]
a_penguins <- subset(penguins, penguins$species=="Adelie")
g_penguins <- subset(penguins, penguins$species=="Gentoo")
param_estimates <- c(3515.6665385862, 4817.2426968284, 342.703635105696, 633.64435427738, 0.381251453066743)
post_pred_likelihood <- function(param_estimates,ypp){
ypp_likelihood = ((param_estimates[5] * dnorm(ypp, param_estimates[1], param_estimates[3]))) / ((param_estimates[5] * dnorm(ypp, param_estimates[1], param_estimates[3])) + ((1 - param_estimates[5]) * dnorm(ypp, param_estimates[2], param_estimates[4])))
return(ypp_likelihood)
}
ppl_adelie <- post_pred_likelihood(param_estimates, a_penguins$body_mass_g)
ppl_gentoo <- post_pred_likelihood(param_estimates, g_penguins$body_mass_g)
par(mfrow=c(1,2))
hist(ppl_adelie, freq = FALSE, breaks = 15, xlab = "Body Mass (g)", main = "Adelie PPL Body Mass")
hist(ppl_gentoo, freq = FALSE, breaks = 10, xlab = "Body Mass (g)", main = "Gentoo PPL Body Mass")
par(mfrow=c(1,2))
hist(a_penguins$body_mass_g, freq = FALSE, main = "Adelie Penguins Body Mass ", xlab = "Body Mass (g)")
points(y = (0.381251453066743 * dnorm(3000:6500, 3515.6665385862, 342.703635105696)), x = 3000:6500, type = "l", col = "goldenrod")
points(y = ((1 - 0.381251453066743) * dnorm(3000:6500, 4817.2426968284, 633.64435427738)), x = 3000:6500, type = "l", col = "cornflowerblue")
legend(4250,9e-04, legend = c("dnorm1", "dnorm2"), fill = c("goldenrod", "cornflowerblue"))
hist(g_penguins$body_mass_g, freq = FALSE, main = "Adelie Penguins Body Mass ", xlab = "Body Mass (g)")
points(y = (0.381251453066743 * dnorm(3000:6500, 3515.6665385862, 342.703635105696)), x = 3000:6500, type = "l", col = "goldenrod")
points(y = ((1 - 0.381251453066743) * dnorm(3000:6500, 4817.2426968284, 633.64435427738)), x = 3000:6500, type = "l", col = "cornflowerblue")
legend(5750,7.5e-04, legend = c("dnorm1", "dnorm2"), fill = c("goldenrod", "cornflowerblue"))
par(mfrow=c(1,2))
hist(a_penguins$body_mass_g, freq = FALSE, main = "Adelie Penguins Body Mass ", xlab = "Body Mass (g)")
points(y = (0.381251453066743 * dnorm(3000:6500, 3515.6665385862, 342.703635105696)), x = 3000:6500, type = "l", col = "goldenrod")
points(y = ((1 - 0.381251453066743) * dnorm(3000:6500, 4817.2426968284, 633.64435427738)), x = 3000:6500, type = "l", col = "cornflowerblue")
legend(4250,9e-04, legend = c("dnorm1", "dnorm2"), fill = c("goldenrod", "cornflowerblue"))
hist(g_penguins$body_mass_g, freq = FALSE, main = "Gentoo Penguins Body Mass ", xlab = "Body Mass (g)")
points(y = (0.381251453066743 * dnorm(3000:6500, 3515.6665385862, 342.703635105696)), x = 3000:6500, type = "l", col = "goldenrod")
points(y = ((1 - 0.381251453066743) * dnorm(3000:6500, 4817.2426968284, 633.64435427738)), x = 3000:6500, type = "l", col = "cornflowerblue")
legend(5750,7.5e-04, legend = c("dnorm1", "dnorm2"), fill = c("goldenrod", "cornflowerblue"))
exp_data <- dexp(c(1:150000), 0.05)
pois_data <- dpois(c(1:150000), 10)
exp_sample_means <- c()
## Plotting sample means from Exponential Distribution
exp_sample_size = 100000
for(i in 1:exp_sample_size){
exp_sample_means[i] <- mean(sample(exp_data, exp_sample_size))
}
exp_data <- dexp(c(1:150000), 0.05)
pois_data <- dpois(c(1:150000), 10)
exp_data <- dexp(c(1:15000), 0.05)
pois_data <- dpois(c(1:15000), 10)
barplot(exp_data)
exp_sample_means <- c()
## Plotting sample means from Exponential Distribution
exp_sample_size = 10000
for(i in 1:exp_sample_size){
exp_sample_means[i] <- mean(sample(exp_data, exp_sample_size))
}
pois_sample_means <- c()
##Plotting sample means from Poisson Distribution
pois_sample_size = 10000
for(i in 1:pois_sample_size){
pois_sample_means[i] <- mean(sample(pois_data, pois_sample_size))
}
par(mfrow=c(1,2))
qqnorm(pois_sample_means,
main = "Poisson Distribution Sample Means Q-Q Plot")
points(qqline(pois_sample_means))
qqnorm(exp_sample_means,
main = "Exponential Distribution Sample Means Q-Q Plot")
points(qqline(exp_sample_means))
LLP <- log_likelihood_poisson(burst_data$NumPhage[1:5], 100)
plot(x=c(1:100), y=LLP, col = "magenta", main = "Log Likelihood of a Poisson
Distribution with Increasing Lambda", xlab = "lambda",
ylab = "log likelihood")
##: Part B
LLPFull <- log_likelihood_poisson(burst_data$NumPhage, 100)
plot(x=c(1:100), y=LLP, col = "magenta", main = "Log Likelihood of a Poisson
Distribution with Increasing Lambda", xlab = "lambda",
ylab = "log likelihood")
##: Part C
which.max(LLPFull)
which.max(LLP)
LLP <- log_likelihood_poisson(burst_data$NumPhage[1:5], 100)
plot(x=c(1:100), y=LLP, type = "l", col = "magenta", main = "Log Likelihood of a Poisson
Distribution with Increasing Lambda", xlab = "lambda",
ylab = "log likelihood")
##: Part B
LLPFull <- log_likelihood_poisson(burst_data$NumPhage, 100)
plot(x=c(1:100), y=LLP, type = "l", col = "magenta", main = "Log Likelihood of a Poisson
Distribution with Increasing Lambda", xlab = "lambda",
ylab = "log likelihood")
##: Part C
which.max(LLPFull)
LLP <- log_likelihood_poisson(burst_data$NumPhage[1:5], 100)
plot(x=c(1:108), y=LLP, type = "l", col = "magenta", main = "Log Likelihood of a Poisson
Distribution with Increasing Lambda", xlab = "lambda",
ylab = "log likelihood")
LLP <- log_likelihood_poisson(burst_data$NumPhage[1:5], 100)
plot(x=c(1:100), y=LLP, type = "l", col = "magenta", main = "Log Likelihood of a Poisson
Distribution with Increasing Lambda", xlab = "lambda",
ylab = "log likelihood")
##: Part B
LLPFull <- log_likelihood_poisson(burst_data$NumPhage, 100)
plot(x=c(1:100), y=LLP, type = "l", col = "magenta", main = "Log Likelihood of a Poisson
Distribution with Increasing Lambda", xlab = "lambda",
ylab = "log likelihood")
##: Part C
which.max(LLPFull)
length(Pset)
length(burst_data$NumPhage)
##: Part B
LLPFull <- log_likelihood_poisson(burst_data$NumPhage, 100)
plot(x=c(1:100), y=LLPFull, type = "l", col = "magenta", main = "Log Likelihood of a Poisson
Distribution with Increasing Lambda", xlab = "lambda",
ylab = "log likelihood")
##: Part C
which.max(LLPFull)
hist(burst_data$NumPhage, freq = FALSE, main = "Original Bacteriophage Data
and Poisson PDF", ylab = "Probability Density", xlab = "NumPhage" , ylim = c(0      ,0.1), col = "cornflowerblue")
sorted_burst_data <- sort(burst_data$NumPhage)
points(dpois(sorted_burst_data, 34), type = "l", col = "darkorchid")
legend(65,0.1, legend = c("Original Data", "PDF of Poisson Dist."),
fill = c("cornflowerblue", "darkorchid"))
hist(burst_data$NumPhage, freq = FALSE, main = "Original Bacteriophage Data
and Poisson PDF", ylab = "Probability Density", xlab = "NumPhage" , ylim = c(0      ,0.1), col = "cornflowerblue")
sorted_burst_data <- sort(burst_data$NumPhage)
points(dpois(sorted_burst_data, 34), type = "l", col = "darkorchid")
legend(65,0.1, legend = c("Original Data", "PDF of Poisson Dist."),
fill = c("cornflowerblue", "darkorchid"))
sorted_burst_data <- sort(burst_data$NumPhage)
hist(sorted_burst_data, freq = FALSE, main = "Original Bacteriophage Data
and Poisson PDF", ylab = "Probability Density", xlab = "NumPhage" , ylim = c(0      ,0.1), col = "cornflowerblue")
points(dpois(sorted_burst_data, 34), type = "l", col = "darkorchid")
legend(65,0.1, legend = c("Original Data", "PDF of Poisson Dist."),
fill = c("cornflowerblue", "darkorchid"))
##///// High Sample Values
exp_sample_means <- c()
## Plotting sample means from Exponential Distribution
exp_sample_size = 10000
for(i in 1:exp_sample_size){
exp_sample_means[i] <- mean(sample(exp_data, exp_sample_size))
}
pois_sample_means <- c()
##Plotting sample means from Poisson Distribution
pois_sample_size = 10000
for(i in 1:pois_sample_size){
pois_sample_means[i] <- mean(sample(pois_data, pois_sample_size))
}
par(mfrow=c(1,2))
qqnorm(pois_sample_means,
main = "Poisson Distribution Sample Means Q-Q Plot, Sample Size 10000")
points(qqline(pois_sample_means))
qqnorm(exp_sample_means,
main = "Exponential Distribution Sample Means Q-Q Plot, Sample Size 10000")
points(qqline(exp_sample_means))
##////// Low Sample Values
exp_sample_means <- c()
## Plotting sample means from Exponential Distribution
exp_sample_size = 100
for(i in 1:exp_sample_size){
exp_sample_means[i] <- mean(sample(exp_data, exp_sample_size))
}
pois_sample_means <- c()
##Plotting sample means from Poisson Distribution
pois_sample_size = 100
for(i in 1:pois_sample_size){
pois_sample_means[i] <- mean(sample(pois_data, pois_sample_size))
}
par(mfrow=c(1,2))
qqnorm(pois_sample_means,
main = "Poisson Distribution Sample Means Q-Q Plot, Sample Size 100")
points(qqline(pois_sample_means))
qqnorm(exp_sample_means,
main = "Exponential Distribution Sample Means Q-Q Plot, Sample Size 100")
points(qqline(exp_sample_means))
##///// High Sample Values
exp_high_sample_means <- c()
## Plotting sample means from Exponential Distribution
exp_high_sample_size = 10000
for(i in 1:exp_sample_size){
exp_high_sample_means[i] <- mean(sample(exp_data, exp_high_sample_size))
}
pois_high_sample_means <- c()
##Plotting sample means from Poisson Distribution
pois_high_sample_size = 10000
for(i in 1:pois_high_sample_size){
pois_high_sample_means[i] <- mean(sample(pois_data, pois_high_sample_size))
}
par(mfrow=c(1,2))
qqnorm(pois_high_sample_means,
main = "Poisson Distribution Sample Means Q-Q Plot, Sample Size 10000")
points(qqline(pois_high_sample_means))
qqnorm(exp_high_sample_means,
main = "Exponential Distribution Sample Means Q-Q Plot, Sample Size 10000")
points(qqline(exp_high_sample_means))
##///// High Sample Values
exp_high_sample_means <- c()
## Plotting sample means from Exponential Distribution
exp_high_sample_size = 10000
for(i in 1:exp_sample_size){
exp_high_sample_means[i] <- mean(sample(exp_data, exp_high_sample_size))
}
pois_high_sample_means <- c()
##Plotting sample means from Poisson Distribution
pois_high_sample_size = 10000
for(i in 1:pois_high_sample_size){
pois_high_sample_means[i] <- mean(sample(pois_data, pois_high_sample_size))
}
##///// Low Sample Values
exp_low_sample_means <- c()
## Plotting sample means from Exponential Distribution
exp_low_sample_size = 1000
for(i in 1:exp_sample_size){
exp_low_sample_means[i] <- mean(sample(exp_data, exp_low_sample_size))
}
pois_low_sample_means <- c()
##Plotting sample means from Poisson Distribution
pois_low_sample_size = 1000
for(i in 1:pois_low_sample_size){
pois_low_sample_means[i] <- mean(sample(pois_data, pois_low_sample_size))
}
par(mfrow=c(2,2))
qqnorm(pois_low_sample_means,
main = "Poisson Distribution Sample Means Q-Q Plot, Sample Size 1,000")
points(qqline(pois_low_sample_means))
qqnorm(exp_low_sample_means,
main = "Exponential Distribution Sample Means Q-Q Plot, Sample Size 1,000")
points(qqline(exp_low_sample_means))
qqnorm(pois_high_sample_means,
main = "Poisson Distribution Sample Means Q-Q Plot, Sample Size 10,000")
points(qqline(pois_high_sample_means))
qqnorm(exp_high_sample_means,
main = "Exponential Distribution Sample Means Q-Q Plot, Sample Size 10,000")
points(qqline(exp_high_sample_means))
qqnorm(pois_low_sample_means,
main = "Poisson Distribution Sample Means Q-Q Plot, Sample Size 1,000")
points(qqline(pois_low_sample_means))
exp_data <- dexp(c(1:15000), 0.05)
pois_data <- dpois(c(1:15000), 10)
##///// High Sample Values
exp_high_sample_means <- c()
exp_high_sample_size = 10000
for(i in 1:exp_sample_size){
exp_high_sample_means[i] <- mean(sample(exp_data, exp_high_sample_size))
}
pois_high_sample_means <- c()
pois_high_sample_size = 10000
for(i in 1:pois_high_sample_size){
pois_high_sample_means[i] <- mean(sample(pois_data, pois_high_sample_size))
}
##///// Low Sample Values
exp_low_sample_means <- c()
exp_low_sample_size = 1000
for(i in 1:exp_sample_size){
exp_low_sample_means[i] <- mean(sample(exp_data, exp_low_sample_size))
}
pois_low_sample_means <- c()
pois_low_sample_size = 1000
for(i in 1:pois_low_sample_size){
pois_low_sample_means[i] <- mean(sample(pois_data, pois_low_sample_size))
}
par(mfrow=c(2,2))
qqnorm(pois_low_sample_means,
main = "Poisson Distribution Sample Means Q-Q Plot, Sample Size 1,000")
points(qqline(pois_low_sample_means))
qqnorm(exp_low_sample_means,
main = "Exponential Distribution Sample Means Q-Q Plot, Sample Size 1,000")
points(qqline(exp_low_sample_means))
qqnorm(pois_high_sample_means,
main = "Poisson Distribution Sample Means Q-Q Plot, Sample Size 10,000")
points(qqline(pois_high_sample_means))
qqnorm(exp_high_sample_means,
main = "Exponential Distribution Sample Means Q-Q Plot, Sample Size 10,000")
points(qqline(exp_high_sample_means))
sorted_burst_data <- sort(burst_data$NumPhage)
hist(sorted_burst_data, freq = FALSE, main = "Original Bacteriophage Data
and Poisson PDF", ylab = "Probability Density", xlab = "NumPhage" ,
ylim = c(0,0.1), col = "cornflowerblue")
points(dpois(x = sorted_burst_data, 34), type = "l", col = "darkorchid")
legend(65,0.1, legend = c("Original Data", "PDF of Poisson Dist."),
fill = c("cornflowerblue", "darkorchid"))
sorted_burst_data <- sort(burst_data$NumPhage)
hist(sorted_burst_data, freq = FALSE, main = "Original Bacteriophage Data
and Poisson PDF", ylab = "Probability Density", xlab = "NumPhage" ,
ylim = c(0,0.1), col = "cornflowerblue")
points(dpois(1:100, 34), type = "l", col = "darkorchid")
legend(65,0.1, legend = c("Original Data", "PDF of Poisson Dist."),
fill = c("cornflowerblue", "darkorchid"))
par(mfrow=c(1,2))
hist(a_penguins$body_mass_g, freq = FALSE,
main = "Adelie Penguins Body \n Mass ", xlab = "Body Mass (g)")
points(y = (0.381251453066743 * dnorm(3000:6500, 3515.6665385862,
342.703635105696)), x = 3000:6500, type = "l", col = "goldenrod")
points(y = ((1 - 0.381251453066743) * dnorm(3000:6500, 4817.2426968284,
633.64435427738)), x = 3000:6500, type = "l", col = "cornflowerblue")
legend(4250,9e-04, legend = c("dnorm1", "dnorm2"), fill = c("goldenrod",
"cornflowerblue"))
hist(g_penguins$body_mass_g, freq = FALSE,
main = "Gentoo Penguins Body \n Mass ", xlab = "Body Mass (g)")
points(y = (0.381251453066743 * dnorm(3000:6500, 3515.6665385862,
342.703635105696)), x = 3000:6500, type = "l", col = "goldenrod")
points(y = ((1 - 0.381251453066743) * dnorm(3000:6500, 4817.2426968284,
633.64435427738)), x = 3000:6500, type = "l", col = "cornflowerblue")
legend(5750,7.5e-04, legend = c("dnorm1", "dnorm2"), fill = c("goldenrod",
"cornflowerblue"))
##///// High Sample Values
exp_high_sample_means <- c()
exp_high_sample_size = 10000
for(i in 1:exp_high_sample_size){
exp_high_sample_means[i] <- mean(sample(exp_data, exp_high_sample_size))
}
pois_high_sample_means <- c()
pois_high_sample_size = 10000
for(i in 1:pois_high_sample_size){
pois_high_sample_means[i] <- mean(sample(pois_data, pois_high_sample_size))
}
##///// Low Sample Values
exp_low_sample_means <- c()
exp_low_sample_size = 1000
for(i in 1:exp_low_sample_size){
exp_low_sample_means[i] <- mean(sample(exp_data, exp_low_sample_size))
}
pois_low_sample_means <- c()
pois_low_sample_size = 1000
for(i in 1:pois_low_sample_size){
pois_low_sample_means[i] <- mean(sample(pois_data, pois_low_sample_size))
}
par(mfrow=c(1,2))
qqnorm(pois_low_sample_means,
main = "Poisson Distribution Sample Means Q-Q Plot, Sample Size 1,000")
points(qqline(pois_low_sample_means))
qqnorm(exp_low_sample_means,
main = "Exponential Distribution Sample Means Q-Q Plot, Sample Size 1,000")
points(qqline(exp_low_sample_means))
par(mfrow=c(1,2))
qqnorm(pois_high_sample_means,
main = "Poisson Distribution Sample Means Q-Q Plot, Sample Size 10,000")
points(qqline(pois_high_sample_means))
qqnorm(exp_high_sample_means,
main = "Exponential Distribution Sample Means Q-Q Plot, Sample Size 10,000")
points(qqline(exp_high_sample_means))
exp_data <- dexp(c(1:15000), 0.05)
pois_data <- dpois(c(1:15000), 10)
exp_data <- dexp(c(1:15000), 0.05)
pois_data <- dpois(c(1:15000), 10)
plot(exp_data)
plot(pois_data)
exp_data <- dexp(c(1:15000), 0.05)
pois_data <- dpois(c(1:15000), 10)
barplot(exp_data)
barplot(pois_data)
exp_data <- dexp(c(1:150), 0.05)
pois_data <- dpois(c(1:150), 10)
barplot(exp_data)
barplot(pois_data)
?rpois()
##///// High Sample Values
exp_high_sample_means <- c()
exp_high_sample_size = 10000
for(i in 1:exp_high_sample_size){
exp_high_sample_means[i] <- mean(rexp(exp_high_sample_size, 0.05))
}
pois_high_sample_means <- c()
pois_high_sample_size = 10000
for(i in 1:pois_high_sample_size){
pois_high_sample_means[i] <- mean(rpois(pois_high_sample_size, 10))
}
##///// Low Sample Values
exp_low_sample_means <- c()
exp_low_sample_size = 1000
for(i in 1:exp_low_sample_size){
exp_low_sample_means[i] <- mean(rexp(exp_low_sample_size, 0.05))
}
pois_low_sample_means <- c()
pois_low_sample_size = 1000
for(i in 1:pois_low_sample_size){
pois_low_sample_means[i] <- mean(rpois(pois_low_sample_size, 10))
}
par(mfrow=c(1,2))
qqnorm(pois_low_sample_means,
main = "Poisson Distribution Sample Means Q-Q Plot, Sample Size 1,000")
points(qqline(pois_low_sample_means))
qqnorm(exp_low_sample_means,
main = "Exponential Distribution Sample Means Q-Q Plot, Sample Size 1,000")
points(qqline(exp_low_sample_means))
par(mfrow=c(1,2))
qqnorm(pois_high_sample_means,
main = "Poisson Distribution Sample Means Q-Q Plot, Sample Size 10,000")
points(qqline(pois_high_sample_means))
qqnorm(exp_high_sample_means,
main = "Exponential Distribution Sample Means Q-Q Plot, Sample Size 10,000")
points(qqline(exp_high_sample_means))
